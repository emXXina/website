[{"/home/merle/website/recipes/src/index.js":"1","/home/merle/website/recipes/src/App.js":"2","/home/merle/website/recipes/src/reportWebVitals.js":"3","/home/merle/website/recipes/src/pages/recipeList/RecipeCard.js":"4","/home/merle/website/recipes/src/pages/recipeList/RecipeList.js":"5","/home/merle/website/recipes/src/pages/recipeList/RecipeDescription.js":"6"},{"size":500,"mtime":1608842261132,"results":"7","hashOfConfig":"8"},{"size":1441,"mtime":1608908916888,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608842261132,"results":"10","hashOfConfig":"8"},{"size":2636,"mtime":1608908556263,"results":"11","hashOfConfig":"8"},{"size":932,"mtime":1608909289470,"results":"12","hashOfConfig":"8"},{"size":237,"mtime":1608908763675,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"123iwr9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/merle/website/recipes/src/index.js",[],["28","29"],"/home/merle/website/recipes/src/App.js",[],"/home/merle/website/recipes/src/reportWebVitals.js",[],"/home/merle/website/recipes/src/pages/recipeList/RecipeCard.js",["30"],"import React from 'react';\n\nimport '@material/react-card/dist/card.css';\nimport \"./recipecard.scss\";\nimport defaultImg from './default.jpg';\n\nimport { Card, CardHeader, CardMedia, CardContent, CardActionArea, CardActions} from '@material-ui/core';\nimport { Button, IconButton } from '@material-ui/core/';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\n\nclass RecipeCard extends React.Component {\n    state = {\n        hoverPlay: false\n    };\n\n    constructor(props) {\n        super(props);\n        \n        this.title = \"\";\n        (this.props.title == null) ? this.title = \"Ohne Titel\" : this.title = this.props.title;\n\n        this.labels = \"\";\n        (this.props.labels == null) ? this.labels = \"Keine Label\" : this.labels = this.props.labels;\n\n        this.img = \"\";\n        (this.props.img == null) ? this.img = defaultImg : this.img = this.props.img;\n\n        this.description = \"\";\n        (this.props.description == null) ? this.description = \"Keine Beschreibung\" : this.description = this.props.description;\n    \n        this.handleTogglePlay = this.handleTogglePlay.bind(this);\n    }\n\n    handleTogglePlay = () => this.setState({ hoverPlay: !this.state.hoverPlay });\n\n    render() {\n        return(\n            <Card variant=\"outlined\" >\n                <CardActionArea>\n                    <CardHeader title={this.title} subheader={this.labels}/>\n                    <CardMedia image={this.img} title=\"Test\" className=\"media\" />\n                    <CardContent>\n                        <p>{this.description}</p>\n                    </CardContent>\n                </CardActionArea>\n\n                <CardActions>\n                    <IconButton\n                        onMouseEnter = {this.handleTogglePlay}\n                        onMouseLeave = {this.handleTogglePlay}\n                    >\n                    {this.state.hoverPlay ? <PlayCircleFilledIcon /> : <PlayCircleOutlineIcon />}\n                    </IconButton>    \n                    <IconButton>\n                        <FindInPageIcon/>\n                    </IconButton>            \n                    <IconButton>\n                        <ShareIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <FavoriteIcon/>\n                    </IconButton>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nexport default RecipeCard;","/home/merle/website/recipes/src/pages/recipeList/RecipeList.js",[],"/home/merle/website/recipes/src/pages/recipeList/RecipeDescription.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":8,"column":10,"nodeType":"37","messageId":"38","endLine":8,"endColumn":16},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]